declare function _exports({ ipld, preload }: {
    ipld: import('.').IPLD;
    preload: import('.').Preload;
}): (ipfsPath: import("ipfs-core-types/src/root").IPFSPath, options?: (ResolveOptions & import("ipfs-core-types").AbortOptions) | undefined) => Promise<ResolveResult>;
export = _exports;
export type ResolveOptions = {
    /**
     * - If `ipfsPath` is a `CID`, you may pass a path here
     */
    path?: string | undefined;
    preload?: boolean | undefined;
};
export type ResolveResult = {
    /**
     * - The last CID encountered during the traversal
     */
    cid: import("cids");
    /**
     * - The path to the end of the IPFS path
     * inside the node referenced by the CID
     */
    remainderPath: string;
};
export type AbortOptions = import("ipfs-core-types").AbortOptions;
//# sourceMappingURL=resolve.d.ts.map