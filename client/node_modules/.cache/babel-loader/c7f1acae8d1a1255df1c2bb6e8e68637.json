{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/angarita/Projects/FleekCodeChallenge/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\nimport Login from 'containets/Login';\nimport { initialState, reducer } from 'store/UserStore';\nexport const AuthContext = /*#__PURE__*/React.createContext();\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const redirectIfAuthenticated = component => {\n    return state.isAuthenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/React.createElement(component);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        render: () => redirectIfAuthenticated(Login)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/angarita/Projects/FleekCodeChallenge/client/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Login","initialState","reducer","AuthContext","createContext","App","state","dispatch","useReducer","redirectIfAuthenticated","component","isAuthenticated","createElement"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,QAGO,kBAHP;AAIA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,iBAAtC;AAGA,OAAO,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAN,EAApB;;AAEP,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,UAAN,CAAiBN,OAAjB,EAA0BD,YAA1B,CAA1B;;AAEA,QAAMQ,uBAAuB,GAAIC,SAAD,IAAe;AAC7C,WAAOJ,KAAK,CAACK,eAAN,gBACL,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADK,gBAELf,KAAK,CAACgB,aAAN,CAAoBF,SAApB,CAFF;AAGD,GAJD;;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,KADK;AAELC,MAAAA;AAFK,KADT;AAAA,2BAME,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AACE,QAAA,MAAM,EAAE,MAAME,uBAAuB,CAACT,KAAD;AADvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvBD;;GAAMK,G;;KAAAA,G;AAyBN,eAAeA,GAAf","sourcesContent":["import React from 'react'; \nimport {\n  BrowserRouter as Router,\n  Switch\n} from 'react-router-dom';\nimport Login from 'containets/Login';\nimport { initialState, reducer } from 'store/UserStore';\n\n\nexport const AuthContext = React.createContext();\n\nconst App = () => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  const redirectIfAuthenticated = (component) => {\n    return state.isAuthenticated ?\n      <Redirect to='/dashboard' /> :\n      React.createElement(component)\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        dispatch\n      }}\n    >\n      <Router>\n        <Route path=\"/login\"\n          render={() => redirectIfAuthenticated(Login)}\n        />\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}