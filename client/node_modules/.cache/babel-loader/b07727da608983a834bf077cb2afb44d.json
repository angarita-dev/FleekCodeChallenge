{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/angarita/Projects/FleekCodeChallenge/client/src/containers/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from 'App';\nimport styled from 'styled-components';\nimport Sidebar from 'components/Sidebar';\nimport Field from 'components/Field';\nimport Button from 'components/Button';\nimport LoginImage from \"assets/undraw_secure_data_0rwp.svg\";\nconst Container = styled.section`\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n`;\n_c = Container;\nconst LoginWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evently;\n  margin: 0 auto;\n  align-items: flex-start;\n  font-family: 'Montserrat', sans-serif;\n  box-sizing: border-box;\n  align-self: center;\n  width: 25%;\n`;\n_c2 = LoginWrapper;\nconst Title = styled.h1`\n  color: rgba(0, 0, 0, 0.75);\n  font-size: 1.5rem;\n  margin-bottom: 3rem;\n  font-family: 'Open Sans', sans-serif;\n`;\n_c3 = Title;\nconst Subtitle = styled.h4`\n  margin: 0;\n  font-family: 'Open Sans', sans-serif;\n  color: rgba(0, 0, 0, 0.65);\n`;\n_c4 = Subtitle;\nconst Description = styled.p`\n  margin-bottom: 2rem;\n  color: rgba(0, 0, 0, 0.6);\n  font-weight: 300;\n  font-size: 0.9rem;\n  text-align: justify;\n  text-justify: inter-word;\n`;\n_c5 = Description;\n\nconst Login = () => {\n  _s();\n\n  const {\n    dispatch\n  } = React.useContext(AuthContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const validEmail = () => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n  };\n\n  const validFields = () => validEmail() && password.length;\n\n  const handleFormSubmit = event => {\n    if (!validFields) return;\n    return fetch('http://localhost:5000/api/users/login', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw res;\n    }).then(resJson => {\n      dispatch({\n        type: \"LOGIN\",\n        payload: {\n          token: resJson.token\n        }\n      });\n    }).catch(err => console.log(err)); // Add error flashes\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      text: \"Nice to see you again!, Log in to access your API keys\",\n      image: LoginImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"Log in to your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: \"By logging in you gain access to your dashboard, where you can request new API keys and disable current keys.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Email\",\n        fieldValue: email,\n        setField: setEmail,\n        fieldType: \"email\",\n        fieldName: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        label: \"Password\",\n        fieldValue: password,\n        setField: setPassword,\n        fieldType: \"password\",\n        fieldName: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        enabled: validFields(),\n        onClick: handleFormSubmit,\n        buttonText: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: [\"Don't have an account? Sign up \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"uKpef61eWvYc7GEQdeiHUF+IsWw=\");\n\n_c6 = Login;\nexport default Login;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"LoginWrapper\");\n$RefreshReg$(_c3, \"Title\");\n$RefreshReg$(_c4, \"Subtitle\");\n$RefreshReg$(_c5, \"Description\");\n$RefreshReg$(_c6, \"Login\");","map":{"version":3,"sources":["/home/angarita/Projects/FleekCodeChallenge/client/src/containers/Login.js"],"names":["React","useState","Link","AuthContext","styled","Sidebar","Field","Button","Container","section","LoginWrapper","Title","h1","Subtitle","h4","Description","p","Login","dispatch","useContext","email","setEmail","password","setPassword","validEmail","re","test","toLowerCase","validFields","length","handleFormSubmit","event","fetch","method","headers","mode","body","JSON","stringify","then","res","ok","json","resJson","type","payload","token","catch","err","console","log","LoginImage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from 'App';\nimport styled from 'styled-components'\nimport Sidebar from 'components/Sidebar';\nimport Field from 'components/Field';\nimport Button from 'components/Button';\nimport LoginImage from 'assets/undraw_secure_data_0rwp.svg';\n\nconst Container = styled.section`\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  display: flex;\n  flex-direction: row;\n`\n\nconst LoginWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evently;\n  margin: 0 auto;\n  align-items: flex-start;\n  font-family: 'Montserrat', sans-serif;\n  box-sizing: border-box;\n  align-self: center;\n  width: 25%;\n`;\n\nconst Title = styled.h1`\n  color: rgba(0, 0, 0, 0.75);\n  font-size: 1.5rem;\n  margin-bottom: 3rem;\n  font-family: 'Open Sans', sans-serif;\n`;\n\nconst Subtitle = styled.h4`\n  margin: 0;\n  font-family: 'Open Sans', sans-serif;\n  color: rgba(0, 0, 0, 0.65);\n`\n\nconst Description = styled.p`\n  margin-bottom: 2rem;\n  color: rgba(0, 0, 0, 0.6);\n  font-weight: 300;\n  font-size: 0.9rem;\n  text-align: justify;\n  text-justify: inter-word;\n`\n\nconst Login = () => {\n  const { dispatch } = React.useContext(AuthContext);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const validEmail = () => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email.toLowerCase());\n  };\n\n  const validFields = () => validEmail() && password.length;\n\n  const handleFormSubmit = event => {\n    if(!validFields) return;\n\n    return fetch('http://localhost:5000/api/users/login', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n        throw res;\n      })\n      .then(resJson => {\n        dispatch({\n          type: \"LOGIN\",\n          payload: { token: resJson.token }\n        })\n      })\n      .catch(err => console.log(err)); // Add error flashes\n  }\n\n  return (\n    <Container>\n      <Sidebar\n        text='Nice to see you again!, Log in to access your API keys'\n        image={LoginImage}\n      />\n      <LoginWrapper>\n        <Title>Log in</Title>\n        <Subtitle>Log in to your account.</Subtitle>\n        <Description>\n          By logging in you gain access to your dashboard, where you can request new API keys and disable current keys.\n        </Description>\n        <Field\n          label='Email'\n          fieldValue={email}\n          setField={setEmail}\n          fieldType='email'\n          fieldName='email'\n        />\n        <Field\n          label='Password'\n          fieldValue={password}\n          setField={setPassword}\n          fieldType='password'\n          fieldName='password'\n        />\n        <Button\n          enabled={validFields()}\n          onClick={handleFormSubmit}\n          buttonText='Continue'\n        />\n        <Description>\n          Don't have an account? Sign up <Link to='/signup'>here.</Link>\n        </Description>\n      </LoginWrapper>\n    </Container> \n  );\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}