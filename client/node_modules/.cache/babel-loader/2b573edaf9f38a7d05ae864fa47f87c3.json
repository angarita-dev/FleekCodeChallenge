{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/angarita/Projects/FleekCodeChallenge/client/src/components/Button.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst ButtonContainer = styled.div`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n    cursor: ${props => props.enabled ? 'pointer' : 'not-allowed'};\n    border-radius: 4px;\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Open Sans', sans-serif;\n    font-weight: 700;\n    background-color: ${props => props.enabled ? props.color : '#fff'};\n    color: ${props => props.enabled ? '#fff' : props.color};\n    border: 2px solid ${props => props.color};\n    transition: all 0.5s ease-in-out;\n  }\n`;\n_c = ButtonContainer;\n\nconst Button = ({\n  enabled,\n  buttonText,\n  onClick,\n  onComplete = () => {},\n  color = \"#005cb2\"\n}) => {\n  const handleClick = event => {\n    event.preventDefault();\n    if (!enabled) return;\n    onClick(event).then(result => onComplete());\n  };\n\n  return /*#__PURE__*/_jsxDEV(ButtonContainer, {\n    enabled: enabled,\n    color: color,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Button;\nexport default Button;\nexport { ButtonContainer as ButtonStyle };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonContainer\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"sources":["/home/angarita/Projects/FleekCodeChallenge/client/src/components/Button.js"],"names":["React","styled","ButtonContainer","div","props","enabled","color","Button","buttonText","onClick","onComplete","handleClick","event","preventDefault","then","result","ButtonStyle"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,eAAe,GAAGD,MAAM,CAACE,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,cAAcC,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,SAAhB,GAA4B,aAAc;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwBD,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgBD,KAAK,CAACE,KAAtB,GAA8B,MAAO;AACtE,aAAaF,KAAK,IAAIA,KAAK,CAACC,OAAN,GAAgB,MAAhB,GAAyBD,KAAK,CAACE,KAAM;AAC3D,wBAAwBF,KAAK,IAAIA,KAAK,CAACE,KAAM;AAC7C;AACA;AACA,CApBA;KAAMJ,e;;AAsBN,MAAMK,MAAM,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,UAAX;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA,UAAU,GAAC,MAAI,CAAE,CAAjD;AAAmDJ,EAAAA,KAAK,GAAC;AAAzD,CAAD,KAA0E;AACvF,QAAMK,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAG,CAACR,OAAJ,EAAa;AAEbI,IAAAA,OAAO,CAACG,KAAD,CAAP,CACCE,IADD,CACMC,MAAM,IAAIL,UAAU,EAD1B;AAED,GAPD;;AASA,sBACE,QAAC,eAAD;AAAiB,IAAA,OAAO,EAAEL,OAA1B;AAAmC,IAAA,KAAK,EAAEC,KAA1C;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEK,WAAjB;AAAA,gBACIH;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjBD;;MAAMD,M;AAmBN,eAAeA,MAAf;AACA,SAASL,eAAe,IAAIc,WAA5B","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n    padding: 10px;\n    box-sizing: border-box;\n    cursor: ${props => props.enabled ? 'pointer' : 'not-allowed'};\n    border-radius: 4px;\n    margin-top: 2rem;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Open Sans', sans-serif;\n    font-weight: 700;\n    background-color: ${props => props.enabled ? props.color : '#fff'};\n    color: ${props => props.enabled ? '#fff' : props.color};\n    border: 2px solid ${props => props.color};\n    transition: all 0.5s ease-in-out;\n  }\n`\n\nconst Button = ({ enabled, buttonText, onClick, onComplete=()=>{}, color=\"#005cb2\" }) => {\n  const handleClick = (event) => {\n    event.preventDefault();\n\n    if(!enabled) return;\n\n    onClick(event)\n    .then(result => onComplete());\n  }\n\n  return (\n    <ButtonContainer enabled={enabled} color={color}>\n      <button onClick={handleClick}>\n        { buttonText }\n      </button>\n    </ButtonContainer>\n  );\n}\n\nexport default Button;\nexport { ButtonContainer as ButtonStyle };\n"]},"metadata":{},"sourceType":"module"}